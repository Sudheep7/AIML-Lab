import csv

data= []
with open('trainingexamples.csv') as csvFile:
    for line in csv.reader(csvFile):
        data.append(tuple(line))

def Doamin():
    d= []
    for i in range(len(data[0])):
        l= []
        for ele in data:
            if ele[i] not in l:
                l.append(ele[i])
            d.append(l)
        return d
D= Domain()

def consitant(h1,h2):
    for x,y in zip(h1,h2):
        if not(x=="?" or(x!="標" and(x==y or y!="標"))):
            return False
    return True

def candidate_eliminatio():
    G= {['?',]*(len(data[0]-1)),}
    S= ['標']*(len(data[0]-1))
    no= 0
    print(f"G [{no}]:{G}")
    print(f"S [{no}]:{S}")

    for item in data:
        no += 1
        inp,res = item[:-1], item[1]
        if res in "Yy":
            i= 0
            G= {g for g in G if consitant(g,inp)}
            for s,x in zip(S,inp):
                if not s==x:
                    s= '?' if s!='標' else x
                i+= 1

        Gprev= G.copy()
        for g in Gprev:
            for i in range(len(g)):
                if g[i]== "?":
                    for val in D[i]:
                        if inp[i]!=val and val==s[i]:
                            g_new= g[:i]+ (val,)+ g[i+1:]
                            G.add(g_new)

                else:
                    G.add(g)
            if('?','?','?','?','?','?') in G:
                G.remove(('?','?','?','?','?','?'))

        print(f"G [{no}]:{G}")
        print(f"S [{no}]:{S}")

candidate_elimination()                
